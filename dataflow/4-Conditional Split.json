{
	"name": "4-Conditional Split",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "LinkedService_ASQL_AWDW2",
						"type": "LinkedServiceReference"
					},
					"name": "sourceProdcut"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "LinkedServices_StorageUdemyLab",
						"type": "LinkedServiceReference"
					},
					"name": "sinkProductRed"
				},
				{
					"linkedService": {
						"referenceName": "LinkedServices_StorageUdemyLab",
						"type": "LinkedServiceReference"
					},
					"name": "sinkProdcutBlue"
				},
				{
					"linkedService": {
						"referenceName": "LinkedServices_StorageUdemyLab",
						"type": "LinkedServiceReference"
					},
					"name": "sinkProductBlack"
				},
				{
					"linkedService": {
						"referenceName": "LinkedServices_StorageUdemyLab",
						"type": "LinkedServiceReference"
					},
					"name": "sinkProductOtros"
				}
			],
			"transformations": [
				{
					"name": "ConditionalSplitProduct"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ProductID as integer,",
				"          Name as string,",
				"          ProductNumber as string,",
				"          Color as string,",
				"          StandardCost as decimal(19,4),",
				"          ListPrice as decimal(19,4),",
				"          Size as string,",
				"          Weight as decimal(8,2),",
				"          ProductCategoryID as integer,",
				"          ProductModelID as integer,",
				"          SellStartDate as timestamp,",
				"          SellEndDate as timestamp,",
				"          DiscontinuedDate as timestamp,",
				"          ThumbNailPhoto as binary,",
				"          ThumbnailPhotoFileName as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table',",
				"     store: 'sqlserver',",
				"     schemaName: 'SalesLT',",
				"     tableName: 'Product',",
				"     isolationLevel: 'READ_UNCOMMITTED') ~> sourceProdcut",
				"sourceProdcut split(Color==\"Red\",",
				"     Color==\"Black\",",
				"     Color==\"Blue\",",
				"     disjoint: false) ~> ConditionalSplitProduct@(Red, Black, Blue, Otros)",
				"ConditionalSplitProduct@Red sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delimited',",
				"     container: 'dataflowdataset',",
				"     folderPath: '4.Conditional Split',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true,",
				"     partitionFileNames:['ProductRed.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          ProductID,",
				"          Name,",
				"          ProductNumber,",
				"          Color,",
				"          StandardCost,",
				"          ListPrice,",
				"          Size,",
				"          Weight,",
				"          ProductCategoryID,",
				"          ProductModelID,",
				"          SellStartDate,",
				"          SellEndDate,",
				"          DiscontinuedDate",
				"     ),",
				"     partitionBy('hash', 1)) ~> sinkProductRed",
				"ConditionalSplitProduct@Blue sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delimited',",
				"     container: 'dataflowdataset',",
				"     folderPath: '4.Conditional Split',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true,",
				"     partitionFileNames:['ProductBlue.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          ProductID,",
				"          Name,",
				"          ProductNumber,",
				"          Color,",
				"          StandardCost,",
				"          ListPrice,",
				"          Size,",
				"          Weight,",
				"          ProductCategoryID,",
				"          ProductModelID,",
				"          SellStartDate,",
				"          SellEndDate,",
				"          DiscontinuedDate",
				"     ),",
				"     partitionBy('hash', 1)) ~> sinkProdcutBlue",
				"ConditionalSplitProduct@Black sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delimited',",
				"     container: 'dataflowdataset',",
				"     folderPath: '4.Conditional Split',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true,",
				"     partitionFileNames:['ProductBlack.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          ProductID,",
				"          Name,",
				"          ProductNumber,",
				"          Color,",
				"          StandardCost,",
				"          ListPrice,",
				"          Size,",
				"          Weight,",
				"          ProductCategoryID,",
				"          ProductModelID,",
				"          SellStartDate,",
				"          SellEndDate,",
				"          DiscontinuedDate",
				"     ),",
				"     partitionBy('hash', 1)) ~> sinkProductBlack",
				"ConditionalSplitProduct@Otros sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delimited',",
				"     container: 'dataflowdataset',",
				"     folderPath: '4.Conditional Split',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true,",
				"     partitionFileNames:['ProductOtros.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          ProductID,",
				"          Name,",
				"          ProductNumber,",
				"          Color,",
				"          StandardCost,",
				"          ListPrice,",
				"          Size,",
				"          Weight,",
				"          ProductCategoryID,",
				"          ProductModelID,",
				"          SellStartDate,",
				"          SellEndDate,",
				"          DiscontinuedDate",
				"     ),",
				"     partitionBy('hash', 1)) ~> sinkProductOtros"
			]
		}
	}
}